{"version":3,"sources":["bundle.js"],"names":["$base","debug","log","context","message","console","selectors","$body","screen","$main","$menuContainer","args","sectionSelector","responsiveWidth","verticalCentered","init","$","fullpage","hasClass","document","ready","$app","config","breakpoint","tablette","mobile","slider"],"mappings":"AAAA;;AAEA;;;;;;AAKA,IAAMA,QAAQ;AACVC,WAAO,KADG;;AAGV;;;;;;AAMAC,OATU,eASNC,OATM,EASGC,OATH,EASY;AAClB,YAAI,KAAKH,KAAT,EAAgB;AACZI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAbS;;;AAeVE,eAAW;AACPC,eAAO;AADA,KAfD;;AAmBV;;;AAGAC,YAAQ;AACJF,mBAAW;AACPG,mBAAO,IADA;AAEPC,4BAAgB;AAFT,SADP;;AAMJ;;;AAGAC,cAAM;AACFC,6BAAiB,SADf;AAEFC,6BAAiB,IAFf;AAGFC,8BAAkB;AAHhB,SATF;;AAeJ;;;AAGAC,YAlBI,kBAkBG;AACHf,kBAAME,GAAN,CAAU,UAAV,EAAsB,MAAtB;AACA,iBAAKI,SAAL,CAAeG,KAAf,GAAuBO,EAAE,WAAF,CAAvB;AACA,iBAAKV,SAAL,CAAeI,cAAf,GAAgCM,EAAE,OAAF,CAAhC;AACA,iBAAKV,SAAL,CAAeG,KAAf,CAAqBQ,QAArB,CAA8B,KAAKN,IAAnC;AACH;AAvBG,KAtBE;;AAgDV;;;AAGAI,QAnDU,kBAmDH;AACHf,cAAME,GAAN,CAAU,KAAV,EAAiB,MAAjB;;AAEAF,cAAMM,SAAN,CAAgBC,KAAhB,GAAwBS,EAAE,MAAF,CAAxB;;AAEA,YAAIhB,MAAMM,SAAN,CAAgBC,KAAhB,CAAsBW,QAAtB,CAA+B,gBAA/B,CAAJ,EAAsD;AAClD,iBAAKV,MAAL,CAAYO,IAAZ;AACH;AACJ;AA3DS,CAAd;;AA8DA;;;;AAIAC,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBpB,UAAMe,IAAN;AACH,CAFD;;AAIA;;;;;;AAMA,IAAMM,OAAO;AACTpB,WAAO,IADE;;AAGT;;;;;;AAMAC,SAAK,aAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC5B,YAAI,KAAKH,KAAT,EAAgB;AACZI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAbQ;;AAeT;;;AAGAkB,YAAQ;AACJrB,eAAO,IADH;AAEJsB,oBAAY;AACRC,sBAAU,GADF;AAERC,oBAAQ;AAFA;AAFR,KAlBC;;AA0BT;;;AAGAC,YAAQ;AACJpB,mBAAW,CAAC,cAAD,EAAiB,eAAjB;AADP,KA7BC;;AAiCT;;;AAGAS,UAAM,gBAAW;AACb,aAAKb,GAAL,CAAS,KAAT,EAAgB,MAAhB;AACH;AAtCQ,CAAb;;AAyCA;;;AAGAc,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBC,SAAKnB,GAAL,CAAS,UAAT,EAAqB,OAArB;AACAmB,SAAKN,IAAL;AACH,CAHD","file":"bundle.js","sourcesContent":["'use strict';\n\n/**\n * Component app to make all interaction.\n *\n * @namespace app\n */\nconst $base = {\n    debug: false,\n\n    /**\n     * Log something in console\n     *\n     * @param {string} context\n     * @param {*} message\n     */\n    log(context, message) {\n        if (this.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    selectors: {\n        $body: null,\n    },\n\n    /**\n     * Component to manage fullPage.js\n     */\n    screen: {\n        selectors: {\n            $main: null,\n            $menuContainer: null,\n        },\n\n        /**\n         * Initialize argument for fullPage.js\n         */\n        args: {\n            sectionSelector: '.screen',\n            responsiveWidth: 1200,\n            verticalCentered: false,\n        },\n\n        /**\n         * Initialize screen\n         */\n        init() {\n            $base.log('fullPage', 'init');\n            this.selectors.$main = $('#fullPage');\n            this.selectors.$menuContainer = $('.menu');\n            this.selectors.$main.fullpage(this.args);\n        },\n    },\n\n    /**\n     * Initialize app\n     */\n    init() {\n        $base.log('app', 'init');\n\n        $base.selectors.$body = $('body');\n\n        if ($base.selectors.$body.hasClass('workshop-slide')) {\n            this.screen.init();\n        }\n    },\n};\n\n/**\n * Run init function of app\n * when the document is ready\n */\n$(document).ready(function() {\n    $base.init();\n});\n\n/**\n * Application object\n *\n * @type {object}\n * @private\n */\nconst $app = {\n    debug: true,\n\n    /**\n     * Log something in console\n     *\n     * @param {*} context\n     * @param {*} message\n     */\n    log: function(context, message) {\n        if (this.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    /**\n     * Object manager for all application parametters\n     */\n    config: {\n        debug: true,\n        breakpoint: {\n            tablette: 768,\n            mobile: 480,\n        },\n    },\n\n    /**\n     *  Object manager for all sliders\n     */\n    slider: {\n        selectors: ['.home-slider', '.event_slider'],\n    },\n\n    /**\n     * Control all initialize function of application components\n     */\n    init: function() {\n        this.log('app', 'init');\n    },\n};\n\n/**\n * Initialize the application when the DOM is ready\n */\n$(document).ready(function() {\n    $app.log('document', 'ready');\n    $app.init();\n});\n"]}