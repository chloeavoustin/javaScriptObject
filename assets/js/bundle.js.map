{"version":3,"sources":["bundle.js"],"names":["$base","debug","log","context","message","console","selectors","$body","screen","$main","$menuContainer","args","sectionSelector","responsiveWidth","verticalCentered","init","$","fullpage","hasClass","document","ready","$app","sliderObject","$element","$config","$container","$next","$prev","config","breakpoint","tablette","mobile","slider","allSliders","i","length","each","index","element","buildSlider","createSlider","Object","create","parent","find","configureSlider","slick","controlSlider","slidesToShow","data","adaptiveHeight","centerMode","centerPadding","dots","arrows","responsive","settings","configureResponsiveSlider","button","action","click"],"mappings":"AAAA;;AAEA;;;;;;AAKA,IAAMA,QAAQ;AACVC,WAAO,KADG;;AAGV;;;;;;AAMAC,OATU,eASNC,OATM,EASGC,OATH,EASY;AAClB,YAAI,KAAKH,KAAT,EAAgB;AACZI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAbS;;;AAeVE,eAAW;AACPC,eAAO;AADA,KAfD;;AAmBV;;;AAGAC,YAAQ;AACJF,mBAAW;AACPG,mBAAO,IADA;AAEPC,4BAAgB;AAFT,SADP;;AAMJ;;;AAGAC,cAAM;AACFC,6BAAiB,SADf;AAEFC,6BAAiB,IAFf;AAGFC,8BAAkB;AAHhB,SATF;;AAeJ;;;AAGAC,YAlBI,kBAkBG;AACHf,kBAAME,GAAN,CAAU,UAAV,EAAsB,MAAtB;AACA,iBAAKI,SAAL,CAAeG,KAAf,GAAuBO,EAAE,WAAF,CAAvB;AACA,iBAAKV,SAAL,CAAeI,cAAf,GAAgCM,EAAE,OAAF,CAAhC;AACA,iBAAKV,SAAL,CAAeG,KAAf,CAAqBQ,QAArB,CAA8B,KAAKN,IAAnC;AACH;AAvBG,KAtBE;;AAgDV;;;AAGAI,QAnDU,kBAmDH;AACHf,cAAME,GAAN,CAAU,KAAV,EAAiB,MAAjB;;AAEAF,cAAMM,SAAN,CAAgBC,KAAhB,GAAwBS,EAAE,MAAF,CAAxB;;AAEA,YAAIhB,MAAMM,SAAN,CAAgBC,KAAhB,CAAsBW,QAAtB,CAA+B,gBAA/B,CAAJ,EAAsD;AAClD,iBAAKV,MAAL,CAAYO,IAAZ;AACH;AACJ;AA3DS,CAAd;;AA8DA;;;;AAIAC,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBpB,UAAMe,IAAN;AACH,CAFD;;AAIA;;;AAGAC,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBC,SAAKnB,GAAL,CAAS,UAAT,EAAqB,OAArB;AACAmB,SAAKN,IAAL;AACH,CAHD;;AAKA;;;;;AAKA,IAAMO,eAAe;AACjBC,cAAU,IADO;AAEjBC,aAAS,IAFQ;AAGjBC,gBAAY,IAHK;AAIjBC,WAAO,IAJU;AAKjBC,WAAO;AALU,CAArB;;AAQA;;;;;;AAMA,IAAMN,OAAO;AACTpB,WAAO,IADE;;AAGT;;;;;;AAMAC,OATS,eASLC,OATK,EASIC,OATJ,EASa;AAClB,YAAI,KAAKH,KAAT,EAAgB;AACZI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAbQ;;;AAeT;;;AAGAwB,YAAQ;AACJ3B,eAAO,IADH;AAEJ4B,oBAAY;AACRC,sBAAU,GADF;AAERC,oBAAQ;AAFA;AAFR,KAlBC;;AA0BT;;;AAGAhB,QA7BS,kBA6BF;AACH,aAAKb,GAAL,CAAS,KAAT,EAAgB,MAAhB;AACA,aAAK8B,MAAL,CAAYjB,IAAZ;AACH,KAhCQ;;;AAkCT;;;AAGAiB,YAAQ;AACJ1B,mBAAW,CAAC,cAAD,EAAiB,eAAjB,CADP;AAEJ2B,oBAAY,EAFR;;AAIJ;;;AAGAlB,cAAM,gBAAW;AAAA;;AACbM,iBAAKnB,GAAL,CAAS,YAAT,EAAuB,MAAvB;AACA,iBAAK,IAAIgC,IAAI,CAAb,EAAgBA,IAAI,KAAK5B,SAAL,CAAe6B,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5C,oBAAIF,SAAS,KAAK1B,SAAL,CAAe4B,CAAf,CAAb;AACA,oBAAIF,OAAOG,MAAP,GAAgB,CAApB,EAAuB;AACnBnB,sBAAEgB,MAAF,EAAUI,IAAV,CAAe,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC/BjB,6BAAKnB,GAAL,CAAS,iBAAT,EAA4B,kBAA5B;AACA,8BAAKqC,WAAL,CAAiB,MAAKC,YAAL,CAAkBH,KAAlB,EAAyBC,OAAzB,CAAjB;AACH,qBAHD;AAIH;AACJ;AACJ,SAlBG;;AAoBJ;;;;;;;AAOAE,oBA3BI,wBA2BSH,KA3BT,EA2BgBC,OA3BhB,EA2ByB;AACzBjB,iBAAKnB,GAAL,CAAS,QAAT,EAAmB,cAAnB;AACA,iBAAK+B,UAAL,CAAgBI,KAAhB,IAAyBI,OAAOC,MAAP,CAAcpB,YAAd,CAAzB;AACA,gBAAMU,SAAS,KAAKC,UAAL,CAAgBI,KAAhB,CAAf;;AAEAL,mBAAOT,QAAP,GAAkBP,EAAEsB,OAAF,CAAlB;AACAN,mBAAOP,UAAP,GAAoBO,OAAOT,QAAP,CAAgBoB,MAAhB,EAApB;AACAX,mBAAON,KAAP,GAAeM,OAAOP,UAAP,CAAkBmB,IAAlB,CAAuB,OAAvB,CAAf;AACAZ,mBAAOL,KAAP,GAAeK,OAAOP,UAAP,CAAkBmB,IAAlB,CAAuB,OAAvB,CAAf;;AAEA,iBAAKC,eAAL,CAAqBb,MAArB;;AAEA,mBAAOA,MAAP;AACH,SAxCG;;;AA0CJ;;;;AAIAO,mBA9CI,uBA8CQP,MA9CR,EA8CgB;AAChBX,iBAAKnB,GAAL,CAAS,YAAT,EAAuB,aAAvB;AACA8B,mBAAOT,QAAP,CAAgBuB,KAAhB,CAAsBd,OAAOR,OAA7B;;AAEA,iBAAKuB,aAAL,CAAmBf,OAAOT,QAA1B,EAAoCS,OAAON,KAA3C,EAAkD,WAAlD;AACA,iBAAKqB,aAAL,CAAmBf,OAAOT,QAA1B,EAAoCS,OAAOL,KAA3C,EAAkD,WAAlD;AACH,SApDG;;;AAsDJ;;;;AAIAkB,uBA1DI,2BA0DYb,MA1DZ,EA0DoB;AACpBX,iBAAKnB,GAAL,CAAS,YAAT,EAAuB,iBAAvB;AACA8B,mBAAOR,OAAP,GAAiB;AACbwB,8BAAchB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,cAArB,CADD;AAEbC,gCAAgBlB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,gBAArB,CAFH;AAGbE,4BAAYnB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,YAArB,CAHC;AAIbG,+BAAepB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,eAArB,IAAwC,IAJ1C;AAKbI,sBAAMrB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,MAArB,CALO;AAMbK,wBAAQ,KANK;AAObC,4BAAY,CACR;AACI1B,gCAAYR,KAAKO,MAAL,CAAYC,UAAZ,CAAuBC,QADvC;AAEI0B,8BAAU;AAFd,iBADQ,EAKR;AACI3B,gCAAYR,KAAKO,MAAL,CAAYC,UAAZ,CAAuBE,MADvC;AAEIyB,8BAAU;AAFd,iBALQ;AAPC,aAAjB;;AAmBA,iBAAKC,yBAAL,CAA+BzB,MAA/B;AACH,SAhFG;;;AAkFJ;;;;AAIAyB,iCAtFI,qCAsFsBzB,MAtFtB,EAsF8B;AAC9BX,iBAAKnB,GAAL,CAAS,YAAT,EAAuB,2BAAvB;AACA,gBAAI8B,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,cAArB,IAAuC,CAA3C,EAA8C;AAC1CjB,uBAAOR,OAAP,CAAe+B,UAAf,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCR,YAAtC,GAAqD,CAArD;AACAhB,uBAAOR,OAAP,CAAe+B,UAAf,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCR,YAAtC,GAAqD,CAArD;AACH;;AAED,gBAAIhB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,eAArB,IAAwC,EAA5C,EAAgD;AAC5CjB,uBAAOR,OAAP,CAAe+B,UAAf,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCJ,aAAtC,GAAsD,MAAtD;AACH;;AAED,gBAAIpB,OAAOT,QAAP,CAAgB0B,IAAhB,CAAqB,eAArB,IAAwC,EAA5C,EAAgD;AAC5CjB,uBAAOR,OAAP,CAAe+B,UAAf,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCJ,aAAtC,GAAsD,MAAtD;AACH;AACJ,SApGG;;;AAsGJ;;;;;;;AAOAL,qBA7GI,yBA6GUT,OA7GV,EA6GmBoB,MA7GnB,EA6G2BC,MA7G3B,EA6GmC;AACnCtC,iBAAKnB,GAAL,CAAS,QAAT,EAAmB,eAAnB;AACAwD,mBAAOE,KAAP,CAAa,YAAM;AACftB,wBAAQQ,KAAR,CAAca,MAAd;AACH,aAFD;AAGH;AAlHG;AArCC,CAAb","file":"bundle.js","sourcesContent":["'use strict';\n\n/**\n * Component app to make all interaction.\n *\n * @namespace app\n */\nconst $base = {\n    debug: false,\n\n    /**\n     * Log something in console\n     *\n     * @param {string} context\n     * @param {*} message\n     */\n    log(context, message) {\n        if (this.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    selectors: {\n        $body: null,\n    },\n\n    /**\n     * Component to manage fullPage.js\n     */\n    screen: {\n        selectors: {\n            $main: null,\n            $menuContainer: null,\n        },\n\n        /**\n         * Initialize argument for fullPage.js\n         */\n        args: {\n            sectionSelector: '.screen',\n            responsiveWidth: 1200,\n            verticalCentered: false,\n        },\n\n        /**\n         * Initialize screen\n         */\n        init() {\n            $base.log('fullPage', 'init');\n            this.selectors.$main = $('#fullPage');\n            this.selectors.$menuContainer = $('.menu');\n            this.selectors.$main.fullpage(this.args);\n        },\n    },\n\n    /**\n     * Initialize app\n     */\n    init() {\n        $base.log('app', 'init');\n\n        $base.selectors.$body = $('body');\n\n        if ($base.selectors.$body.hasClass('workshop-slide')) {\n            this.screen.init();\n        }\n    },\n};\n\n/**\n * Run init function of app\n * when the document is ready\n */\n$(document).ready(function() {\n    $base.init();\n});\n\n/**\n * Initialize the application when the DOM is ready\n */\n$(document).ready(function() {\n    $app.log('document', 'ready');\n    $app.init();\n});\n\n/**\n * Slider Object\n *\n * @type {object}\n */\nconst sliderObject = {\n    $element: null,\n    $config: null,\n    $container: null,\n    $next: null,\n    $prev: null,\n};\n\n/**\n * Application object\n *\n * @type {object}\n * @private\n */\nconst $app = {\n    debug: true,\n\n    /**\n     * Log something in console\n     *\n     * @param {*} context\n     * @param {*} message\n     */\n    log(context, message) {\n        if (this.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    /**\n     * Object manager for all application parametters\n     */\n    config: {\n        debug: true,\n        breakpoint: {\n            tablette: 768,\n            mobile: 480,\n        },\n    },\n\n    /**\n     * Control all initialize function of application components\n     */\n    init() {\n        this.log('app', 'init');\n        this.slider.init();\n    },\n\n    /**\n     *  Object manager for all sliders\n     */\n    slider: {\n        selectors: ['.home-slider', '.event_slider'],\n        allSliders: [],\n\n        /**\n         * Initialize each slider\n         */\n        init: function() {\n            $app.log('app.slider', 'init');\n            for (let i = 0; i < this.selectors.length; i++) {\n                let slider = this.selectors[i];\n                if (slider.length > 0) {\n                    $(slider).each((index, element) => {\n                        $app.log('app.slider.init', ' ____ New slider');\n                        this.buildSlider(this.createSlider(index, element));\n                    });\n                }\n            }\n        },\n\n        /**\n         ** Set a slider instance\n         *\n         * @param {number} index\n         * @param {object} element\n         * @return {object}\n         */\n        createSlider(index, element) {\n            $app.log('slider', 'createSlider');\n            this.allSliders[index] = Object.create(sliderObject);\n            const slider = this.allSliders[index];\n\n            slider.$element = $(element);\n            slider.$container = slider.$element.parent();\n            slider.$next = slider.$container.find('.next');\n            slider.$prev = slider.$container.find('.prev');\n\n            this.configureSlider(slider);\n\n            return slider;\n        },\n\n        /**\n         * Build a slider\n         * @param {object} slider\n         */\n        buildSlider(slider) {\n            $app.log('app.slider', 'buildSlider');\n            slider.$element.slick(slider.$config);\n\n            this.controlSlider(slider.$element, slider.$next, 'slickNext');\n            this.controlSlider(slider.$element, slider.$prev, 'slickPrev');\n        },\n\n        /**\n         * Set global parameters for a slider instance\n         * @param {object} slider\n         */\n        configureSlider(slider) {\n            $app.log('app.slider', 'configureSlider');\n            slider.$config = {\n                slidesToShow: slider.$element.data('slidestoshow'),\n                adaptiveHeight: slider.$element.data('adaptiveheight'),\n                centerMode: slider.$element.data('centermode'),\n                centerPadding: slider.$element.data('centerpadding') + 'px',\n                dots: slider.$element.data('dots'),\n                arrows: false,\n                responsive: [\n                    {\n                        breakpoint: $app.config.breakpoint.tablette,\n                        settings: {},\n                    },\n                    {\n                        breakpoint: $app.config.breakpoint.mobile,\n                        settings: {},\n                    },\n                ],\n            };\n\n            this.configureResponsiveSlider(slider);\n        },\n\n        /**\n         * Set responsive parameters for a slider instance\n         * @param {object} slider\n         */\n        configureResponsiveSlider(slider) {\n            $app.log('app.slider', 'configureResponsiveSlider');\n            if (slider.$element.data('slidestoshow') > 2) {\n                slider.$config.responsive[0].settings.slidesToShow = 2;\n                slider.$config.responsive[1].settings.slidesToShow = 1;\n            }\n\n            if (slider.$element.data('centerpadding') > 40) {\n                slider.$config.responsive[0].settings.centerPadding = '40px';\n            }\n\n            if (slider.$element.data('centerpadding') > 20) {\n                slider.$config.responsive[1].settings.centerPadding = '20px';\n            }\n        },\n\n        /**\n         * Make a slider action when user click on button\n         *\n         * @param {object} element\n         * @param {object} button\n         * @param {string} action\n         */\n        controlSlider(element, button, action) {\n            $app.log('slider', 'controlSlider');\n            button.click(() => {\n                element.slick(action);\n            });\n        },\n\n    },\n};\n"]}