{"version":3,"sources":["bundle.js"],"names":["$base","debug","log","context","message","console","selectors","$body","screen","$main","args","sectionSelector","responsiveWidth","verticalCentered","init","$","fullpage","hasClass","document","ready","$app","config","breakpoint","tablette","mobile","slider"],"mappings":"AAAA;;AAEA;;;;;;AAKA,IAAMA,QAAQ;AACVC,WAAO,KADG;;AAGV;;;;;;AAMAC,OATU,eASNC,OATM,EASGC,OATH,EASY;AAClB,YAAI,KAAKH,KAAT,EAAgB;AACZI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAbS;;;AAeVE,eAAW;AACPC,eAAO;AADA,KAfD;;AAmBV;;;AAGAC,YAAQ;AACJF,mBAAW;AACPG,mBAAO;AADA,SADP;;AAKJ;;;AAGAC,cAAM;AACFC,6BAAiB,SADf;AAEFC,6BAAiB,IAFf;AAGFC,8BAAkB;AAHhB,SARF;;AAcJ;;;AAGAC,YAjBI,kBAiBG;AACHd,kBAAME,GAAN,CAAU,UAAV,EAAsB,MAAtB;AACA,iBAAKI,SAAL,CAAeG,KAAf,GAAuBM,EAAE,WAAF,CAAvB;AACA,iBAAKT,SAAL,CAAeG,KAAf,CAAqBO,QAArB,CAA8B,KAAKN,IAAnC;AACH;AArBG,KAtBE;;AA8CV;;;AAGAI,QAjDU,kBAiDH;AACHd,cAAME,GAAN,CAAU,KAAV,EAAiB,MAAjB;;AAEAF,cAAMM,SAAN,CAAgBC,KAAhB,GAAwBQ,EAAE,MAAF,CAAxB;;AAEA,YAAIf,MAAMM,SAAN,CAAgBC,KAAhB,CAAsBU,QAAtB,CAA+B,gBAA/B,CAAJ,EAAsD;AAClD,iBAAKT,MAAL,CAAYM,IAAZ;AACH;AACJ;AAzDS,CAAd;;AA4DA;;;;AAIAC,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBnB,UAAMc,IAAN;AACH,CAFD;;AAIA;;;AAGAC,EAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBC,SAAKlB,GAAL,CAAS,UAAT,EAAqB,OAArB;AACAkB,SAAKN,IAAL;AACH,CAHD;;AAKA;;;;;AAKA,IAAMM,OAAO;AACT;;;;;;AAMAlB,SAAK,aAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC5B,YAAI,KAAKiB,MAAL,CAAYpB,KAAhB,EAAuB;AACnBI,oBAAQH,GAAR,CAAYC,UAAU,IAAV,GAAiBC,OAA7B;AACH;AACJ,KAXQ;;AAaT;;;AAGAiB,YAAQ;AACJpB,eAAO,IADH;AAEJqB,oBAAY;AACRC,sBAAU,GADF;AAERC,oBAAQ;AAFA;AAFR,KAhBC;;AAwBT;;;AAGAC,YAAQ;AACJnB,mBAAW,CAAC,cAAD,EAAiB,eAAjB;AADP,KA3BC;;AA+BT;;;AAGAQ,UAAM,gBAAW;AACb,aAAKZ,GAAL,CAAS,KAAT,EAAgB,MAAhB;AACH;AApCQ,CAAb","file":"bundle.js","sourcesContent":["'use strict';\n\n/**\n * Component app to make all interaction.\n *\n * @namespace $base\n */\nconst $base = {\n    debug: false,\n\n    /**\n     * Log something in console\n     *\n     * @param {string} context\n     * @param {*} message\n     */\n    log(context, message) {\n        if (this.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    selectors: {\n        $body: null,\n    },\n\n    /**\n     * Component to manage fullPage.js\n     */\n    screen: {\n        selectors: {\n            $main: null,\n        },\n\n        /**\n         * Initialize argument for fullPage.js\n         */\n        args: {\n            sectionSelector: '.screen',\n            responsiveWidth: 1200,\n            verticalCentered: false,\n        },\n\n        /**\n         * Initialize screen\n         */\n        init() {\n            $base.log('fullPage', 'init');\n            this.selectors.$main = $('#fullPage');\n            this.selectors.$main.fullpage(this.args);\n        },\n    },\n\n    /**\n     * Initialize app\n     */\n    init() {\n        $base.log('app', 'init');\n\n        $base.selectors.$body = $('body');\n\n        if ($base.selectors.$body.hasClass('workshop-slide')) {\n            this.screen.init();\n        }\n    },\n};\n\n/**\n * Run init function of app\n * when the document is ready\n */\n$(document).ready(function() {\n    $base.init();\n});\n\n/**\n * Initialize the application when the DOM is ready\n */\n$(document).ready(function() {\n    $app.log('document', 'ready');\n    $app.init();\n});\n\n/**\n * Application object\n *\n * @namespace\n */\nconst $app = {\n    /**\n     * Log something in console\n     *\n     * @param {*} context\n     * @param {*} message\n     */\n    log: function(context, message) {\n        if (this.config.debug) {\n            console.log(context + ': ' + message);\n        }\n    },\n\n    /**\n     * Object manager for all application parameters\n     */\n    config: {\n        debug: true,\n        breakpoint: {\n            tablette: 768,\n            mobile: 480,\n        },\n    },\n\n    /**\n     *  Object manager for all sliders\n     */\n    slider: {\n        selectors: ['.home-slider', '.event_slider'],\n    },\n\n    /**\n     * Control all initialize function of application components\n     */\n    init: function() {\n        this.log('app', 'init');\n    },\n};\n"]}